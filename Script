local Players = game:GetService("Players")
local HttpService = game:GetService("HttpService")

-- Load commands
local commandsUrl = "https://raw.githubusercontent.com/raxkio/Raxkios-Animation-Changer/main/Commands"
local commands = HttpService:JSONDecode(game:HttpGet(commandsUrl))

-- Load animations
local animationsUrl = "https://raw.githubusercontent.com/raxkio/Raxkios-Animation-Changer/main/Animations"
local animationLibrary = loadstring(game:HttpGet(animationsUrl))()

local function applyAnimation(player, animationName)
    local animations = animationLibrary[animationName]
    if animations then
        local humanoid = player.Character and player.Character:FindFirstChildOfClass("Humanoid")
        if humanoid then
            for state, id in pairs(animations) do
                local animation = Instance.new("Animation")
                animation.AnimationId = id
                humanoid:LoadAnimation(animation):Play()
            end
        end
    end
end

local function onPlayerAdded(player)
    player.Chatted:Connect(function(message)
        local args = message:split(" ")
        local command = args[1]
        local animationName = args[3]

        if command == "/e" then
            if args[2] == "animation" and animationName then
                applyAnimation(player, animationName)
            elseif args[2] == "animationperm" and animationName then
                -- Save the animation to a folder in Workspace
                local folder = workspace:FindFirstChild("AnimationSettings") or Instance.new("Folder", workspace)
                folder.Name = "AnimationSettings"

                local setting = folder:FindFirstChild(player.Name) or Instance.new("StringValue", folder)
                setting.Name = player.Name
                setting.Value = animationName

                applyAnimation(player, animationName)
            end
        end
    end)
end

local function onCharacterAdded(character)
    local player = Players:GetPlayerFromCharacter(character)
    if player then
        local folder = workspace:FindFirstChild("AnimationSettings")
        if folder then
            local setting = folder:FindFirstChild(player.Name)
            if setting then
                applyAnimation(player, setting.Value)
            end
        end
    end
end

Players.PlayerAdded:Connect(onPlayerAdded)

for _, player in ipairs(Players:GetPlayers()) do
    onPlayerAdded(player)
    if player.Character then
        onCharacterAdded(player.Character)
    end
end

Players.PlayerRemoving:Connect(function(player)
    local folder = workspace:FindFirstChild("AnimationSettings")
    if folder then
        local setting = folder:FindFirstChild(player.Name)
        if setting then
            setting:Destroy()
        end
    end
end)

Players.Player.CharacterAdded:Connect(onCharacterAdded)
